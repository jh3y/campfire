html.has-support
  head
    title :has Connections
    meta(name="viewport" content="width=device-width, initial-scale=1, user-scalable=0, maximum-scale=1.0")
    link(rel="stylesheet" href="../feature-detection/style.css")
    link(rel="stylesheet" href="./style.css")
  body
    - const COLUMNS = 7
    - const CELLS = 6
    - const DISCS = COLUMNS * CELLS
    form
      button.game-reset.faux-button(type="reset" title="Reset")
        svg(class="reset" viewBox="0 0 24 24")
          path(d="M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z")
      .screen.screen--intro
        .dialog
          .dialog__content.dialog__content--intro
            h1 :has Connect 4?
            p.
              You know the drill!
            label.faux-button(for="dismiss") Start Game
      .screen
        .dialog
          .dialog__content.dialog__content--win
            h1 Winner! ðŸŽ‰
            .win-disc Just needs the winning hue combo
            button.faux-button(type="reset" title="Reset Board") Play again
          .dialog__content.dialog__content--draw
            h1 Really?
            .win-disc Boring...
            button.faux-button(type="reset" title="Reset Board") Replay
      .board(style=`--rows: ${CELLS}; --columns: ${COLUMNS}; --disc-count: ${DISCS};`)
        .board__controls
          .controls
            - let s = 1
            while s < DISCS + 1
              input(type='checkbox' id=`s-${s}`)
              input(type='checkbox' id=`p-${s}`)
              - s++
          button(type="reset") Reset
        - let c = 0
        while c < COLUMNS
          .board__column
            - let i = CELLS
            <!-- I tells you the row or the distance being travelled -->
            while i > 0
              - const INDEX = c * CELLS + i
              .board__cell(class=`move-${INDEX}` style=`--row: ${(CELLS + 1) - i};`)
                .board__labels
                  label.board__move(for=`s-${INDEX}`)
                    .ghost__disc
                  label.board__move(for=`p-${INDEX}`)
                    .ghost__disc
                .board__discs
                  .board__disc.board__disc--primary
                  .board__disc.board__disc--secondary
              - i--
            - c++
  input(type="checkbox" id="dismiss")