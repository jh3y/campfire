@import "npm:open-props/open-props.min.css";
@import "npm:open-props/normalize.min.css";

* {
  box-sizing: border-box;
  transform-style: preserve-3d;
}

:root {
  --glow: hsl(45 80% 70%);
  --wood: hsl(30 40% 30%);
  --cage: hsl(40 20% 20%);
  --hunting: 1;
  --show-unlock: 0;
  --proximity: 0;
  --shadow: hsl(0 0% 0% / 0.5);
}

body {
  display: grid;
  place-items: center;
  min-height: 100vh;
  margin: 0;
  background: linear-gradient(to bottom right,hsl(202 17% 25%),hsl(231 28% 8%));
}

button {
  font-family: 'Google Sans', system-ui, sans-serif;
  font-size: 2rem;
  border: 4px solid var(--gray-0);
  padding: var(--size-4) var(--size-8);
  background: hsl(0 0% 0%);
  color: var(--gray-0);
  transition: transform 0.2s;
  transform: scale(var(--s, 1)) translateY(var(--y, 0));
}
.unlock {
  transition: transform 0.2s;
  transform: translate(-50%, 0) scale(var(--show-unlock)) scale(var(--s, 1)) translateY(var(--y, 0));
  position: absolute;
  left: 50%;
  top: calc(50% + 30vmin);
  background: var(--green-6);
  display: none;
}

button:hover {
  --s: 1.1;
  --y: -5%;
}

button:active {
  --s: 0.9;
  --y: 5%;
}


.chest__keyhole {
  height: 30%;
  position: absolute;
  left: 50%;
  top: 0;
  transform: translate(-50%, 10%);
}

.chest__bear {
  position: absolute;
  width: 15%;
  filter: saturate(0.25);
  right: 5%;
  bottom: 5%;
  opacity: 0.5;
  transform: rotate(-25deg);
}

.chest-wrapper {
  --rotation: 10deg;
  --flight: -100;
  --proximity: 0;
  --size: 20vmin;
  position: absolute;
  opacity: 0;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 100vmin) rotateX(-24deg) rotateY(-32deg) rotate(calc((var(--proximity) / 100) * var(--rotation)));
  animation: shake calc(((1 - ((var(--proximity) / 100) * 0.9)) * var(--hunting)) * 1s) infinite ease;
}

.chest {
  height: var(--size);
  aspect-ratio: 2 / 1;
  transform: translateY(calc(var(--flight, 0) * 1vmin));
  transition: transform 0.25s ease-in;
}

.chest-shadow {
  height: var(--size);
  aspect-ratio: 2 / 1;
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: 50% 50%;
  transform: translate(-50%, -50%) rotateX(90deg) translateZ(calc(var(--size) * -0.5));  
}

.chest-shadow:after {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--shadow);
  opacity: var(--o, 0);
  transition: opacity 0.25s ease-in, transform 0.25s ease-in;
  transform: scale(var(--o, 0));
}

.chest__body {
  --depth: var(--size);
  position: absolute;
  bottom: 0;
  height: 60%;
  width: 100%;
  left: 0;
}

.chest__body .cuboid__side:nth-of-type(1),
.chest__lid .cuboid__side:nth-of-type(3) {
  display: none;
}

.chest__lid {
  --depth: var(--size);
  position: absolute;
  top: 0;
  height: 40%;
  width: 100%;
  left: 0;
  color: blue;
  transform: translateZ(calc(var(--size) * -0.5));
}

.chest__lid .cuboid__side:nth-of-type(1):after,
.chest__lid .cuboid__side:nth-of-type(5):after,
.chest__lid .cuboid__side:nth-of-type(6):after,
.chest__body .cuboid__side:nth-of-type(5):after,
.chest__body .cuboid__side:nth-of-type(6):after {
  content: '';
  position: absolute;
  width: calc(var(--size) * 0.15);
  height: 100%;
  background: var(--cage);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
}

.chest__lid-hinge {
  height: 100%;
  width: 100%;
  transform-origin: 50% 100%;
  transition: transform 0.25s;
  transform: rotateX(calc(var(--opened, 0) * 150deg));
}

.chest__lid-hinge--opening {
  animation: wobble 8s;
}

.chest__note {
  display: grid;
  place-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transition: transform 0.25s 0.25s ease-out;
  transform: translate(-50%,-50%) rotateY(calc(var(--found, 0) * 32deg)) translateY(calc(var(--found, 0) * -20vmin)) scale(var(--found, 0)) translateZ(calc(var(--found, 0) * (var(--size) * 1.5))) translateY(0);
  padding: var(--size-4);
  font-family: 'Google Sans', system-ui, sans-serif;
  font-weight: var(--font-weight-8);
  background: var(--gray-1);
  color: var(--gray-8);
}

.chest__note--found {
  animation: hover calc(var(--found, 0) * 2s) calc(var(--found, 0) * 1s) infinite ease-in-out;
}

.chest-spinner--spinning {
  animation-name: spin-to-win;
  animation-timing-function: ease-in;
  animation-duration: 8s;
}

@keyframes spin-to-win {
  100% {
    transform: rotateY(-1080deg);
  }
}

@keyframes wobble {
  0%, 20%, 40%, 60%, 80%, 100% {
    transform: rotateX(0deg);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: rotateX(10deg);
  }
}

@keyframes hover {
  0%, 100% {
    transform: translate(-50%,-50%) rotateY(calc(var(--found, 0) * 32deg)) translateY(calc(var(--found, 0) * -20vmin)) scale(var(--found, 0)) translateZ(calc(var(--found, 0) * (var(--size) * 1.5))) translateY(0);
  }
  50% {
    transform: translate(-50%,-50%) rotateY(calc(var(--found, 0) * 32deg)) translateY(calc(var(--found, 0) * -20vmin)) scale(var(--found, 0)) translateZ(calc(var(--found, 0) * (var(--size) * 1.5))) translateY(-5%);
  }
}

.chest__note p {
  font-size: calc(var(--size) * 0.25);
  white-space: nowrap;
}

.chest__note:before {
  content: '';
  background: var(--gray-1);
  position: absolute;
  inset: 0;
  filter: brightness(2) drop-shadow(0 0 2vmin var(--glow)) drop-shadow(-1vmin -1vmin 6vmin var(--glow)) drop-shadow(1vmin 1vmin 6vmin var(--glow)) drop-shadow(0 0 10vmin var(--glow));
  z-index: -1;
  transform: translateZ(-1px);
}

.chest .cuboid__side {
  border: calc(var(--size) * 0.075) solid var(--cage);
}

.chest__lid .cuboid {
  transform: translateZ(calc(var(--size) * 0.5));
}

.chest .cuboid {
  color: var(--wood);
}

.start-button {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 200vmin) scale(var(--s, 1)) translateY(var(--y, 0));
}

@keyframes shake {
  25% {
    transform: translate3d(-50%, -50%, 100vmin) rotateX(-24deg) rotateY(-32deg) rotate(calc((var(--proximity) / 100) * var(--rotation)));
  }
  75% {
    transform: translate3d(-50%, -50%, 100vmin) rotateX(-24deg) rotateY(-32deg) rotate(calc((var(--proximity) / -100) * var(--rotation)));
  }
}

.debug-label {
  font-size: 0.875rem;
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  font-weight: bold;
  font-family: sans-serif;
  color: var(--gray-1);
}




/* Cuboid */
.cuboid {
  height: 100%;
  width: 100%;
  position: relative;
}

.cuboid__side {
  background-color: currentColor;
  position: absolute;
  height: 100%;
  width: 100%;
  transition: background-color 0.2s;
  filter: brightness(var(--brightness, 1));
}

/* T, R, B, L, F, B */
.cuboid__side:nth-of-type(1) {
  --brightness: 0.8;
  filter: none;
  top: 0;
  height: var(--depth, 50vmin);
  transform: translateY(-50%) rotateX(-90deg);
}

.cuboid__side:nth-of-type(2) {
  --brightness: 0.6;
  top: 50%;
  right: 0;
  width: var(--depth, 50vmin);
  transform: translate(50%, -50%) rotateY(-90deg);
}
.cuboid__side:nth-of-type(3) {
  --brightness: 1.3;
  bottom: 0;
  height: var(--depth, 50vmin);
  transform: translateY(50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(4) {
  --brightness: 0.6;
  top: 50%;
  width: var(--depth, 50vmin);
  transform: translate(-50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(5) {
  --brightness: 0.75;
  transform: translateZ(calc(var(--depth, 50vmin) / -2));
}
.cuboid__side:nth-of-type(6) {
  --brightness: 1;
  transform: translateZ(calc(var(--depth, 50vmin) / 2)) rotateY(0deg);
}
